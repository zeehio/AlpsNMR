% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nmr_detect_peaks_align.R
\name{nmr_detect_peaks}
\alias{nmr_detect_peaks}
\title{Peak detection for NMR}
\usage{
nmr_detect_peaks(
  nmr_dataset,
  nDivRange_ppm = 0.1,
  scales = seq(1, 16, 2),
  baselineThresh = NULL,
  SNR.Th = 3
)
}
\arguments{
\item{nmr_dataset}{An \link{nmr_dataset_1D}.}

\item{nDivRange_ppm}{Segment size, in ppms, to divide the spectra and search
for peaks.}

\item{scales}{The parameter of peakDetectionCWT function of MassSpecWavelet package, look it up in the original function.}

\item{baselineThresh}{It will remove all peaks under an intensity set by
baselineThresh. If you set it to 'NULL', nmr_detect_peaks will
automatically compute an aproximate value considering baseline between 9.5
and 10.0 ppm (automatically calculation using \code{baselineThresh = NULL} will
not work if spectra were not interpolated up to 10.0 ppm)}

\item{SNR.Th}{The parameter of peakDetectionCWT function of MassSpecWavelet package, look it up in the original function. If you set -1, the function will itself re-compute this value.}
}
\value{
A data frame with the NMRExperiment, the sample index, the position
in ppm and index and the peak intensity
}
\description{
The function detects peaks on an \link{nmr_dataset_1D} object, using
\link[speaq:detectSpecPeaks]{speaq::detectSpecPeaks}. \code{detectSpecPeaks} divides the whole spectra into
smaller segments and uses \link[MassSpecWavelet:peakDetectionCWT]{MassSpecWavelet::peakDetectionCWT} for peak
detection.
}
\examples{
\dontrun{
# 0. Multiprocess (parallelization) to set the number of cores working in your PC
plan(multiprocess, workers = 12)

# 1.Peak detection in the dataset.
peak_data <- nmr_detect_peaks(nmr_dataset,
                              nDivRange_ppm = 0.1, # Size of detection segments
                              scales = seq(1, 16, 2),
                              baselineThresh = 0, # Minimum peak intensity
                              SNR.Th = 4) # Signal to noise ratio

# 2.Find the reference spectrum to align with.
NMRExp_ref <- nmr_align_find_ref(nmr_dataset, peak_data)

# 3.Spectra alignment using the ref spectrum and a maximum alignment shift
nmr_dataset <- nmr_align(nmr_dataset, # the dataset
                         peak_data, # detected peaks
                         NMRExp_ref = NMRExp_ref, # ref spectrum
                         maxShift_ppm = 0.0015, # max alignment shift
                         acceptLostPeak = FALSE) # lost peaks

# 4.Set sequential working to finish parallelization
plan(sequential)

# 5.Peak integration (please, consider previous normalization step).
# First we take the peak table from the reference spectrum
peak_data_ref <- filter(peak_data, NMRExperiment == NMRExp_ref)

# Then we integrate spectra considering the peaks from the ref spectrum
nmr_peak_table <- nmr_integrate_peak_positions(
samples = nmr_dataset,
peak_pos_ppm = peak_data_ref$ppm,
peak_width_ppm = NULL)

#If you wanted the final peak table before machine learning you can run
nmr_peak_table_completed <- get_integration_with_metadata(nmr_peak_table)
}
}
\seealso{
\link{nmr_align} for peak alignment with the detected peak table

Other peak detection functions: 
\code{\link{nmr_baseline_threshold}()},
\code{\link{nmr_detect_peaks_plot}()},
\code{\link{nmr_detect_peaks_tune_snr}()},
\code{\link{nmr_identify_regions_blood}()},
\code{\link{nmr_identify_regions_cell}()},
\code{\link{nmr_identify_regions_urine}()},
\code{\link{nmr_integrate_regions}()},
\code{\link{pipe_peakdet_align}()},
\code{\link{regions_from_peak_table}()}

Other nmr_dataset_1D functions: 
\code{\link{Automatic_targeted_profiling}()},
\code{\link{[.nmr_dataset_1D}()},
\code{\link{computes_peak_width_ppm}()},
\code{\link{file_lister}()},
\code{\link{files_to_rDolphin_blood}()},
\code{\link{files_to_rDolphin_cell}()},
\code{\link{files_to_rDolphin_urine}()},
\code{\link{get_integration_with_metadata}()},
\code{\link{is.nmr_dataset_1D}()},
\code{\link{load_and_save_functions}},
\code{\link{new_nmr_dataset_1D}()},
\code{\link{nmr_align_find_ref}()},
\code{\link{nmr_align}()},
\code{\link{nmr_baseline_removal}()},
\code{\link{nmr_baseline_threshold}()},
\code{\link{nmr_detect_peaks_plot}()},
\code{\link{nmr_detect_peaks_tune_snr}()},
\code{\link{nmr_exclude_region}()},
\code{\link{nmr_integrate_peak_positions}()},
\code{\link{nmr_integrate_regions}()},
\code{\link{nmr_interpolate_1D}()},
\code{\link{nmr_meta_add}()},
\code{\link{nmr_meta_export}()},
\code{\link{nmr_meta_get_column}()},
\code{\link{nmr_meta_get}()},
\code{\link{nmr_normalize}()},
\code{\link{nmr_pca_build_model}()},
\code{\link{nmr_pca_outliers_filter}()},
\code{\link{nmr_pca_outliers_plot}()},
\code{\link{nmr_pca_outliers_robust}()},
\code{\link{nmr_pca_outliers}()},
\code{\link{nmr_ppm_resolution}()},
\code{\link{plot.nmr_dataset_1D}()},
\code{\link{plot_webgl}()},
\code{\link{rdCV_PLS_RF_ML}()},
\code{\link{rdCV_PLS_RF}()},
\code{\link{save_files_to_rDolphin}()},
\code{\link{to_ASICS}()},
\code{\link{to_ChemoSpec}()},
\code{\link{to_rDolphin}()},
\code{\link{validate_nmr_dataset_1D}()}
}
\concept{nmr_dataset_1D functions}
\concept{peak detection functions}
